<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.redhat.rcm</groupId>
    <artifactId>redhat-releng-tools</artifactId>
    <version>3</version>
  </parent>
  
  <groupId>com.redhat.red.build</groupId>
  <artifactId>kojiji</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>Kojiji</name>
  <description>Koji Java Interface</description>
  <url>https://github.com/release-engineering/kojiji</url>

  <scm>
    <connection>scm:git:https://github.com/release-engineering/kojiji.git</connection>
    <developerConnection>scm:git:git@github.com:release-engineering/kojiji.git</developerConnection>
    <url>https://github.com/release-engineering/kojiji</url>
  </scm>

  <properties>
    <javaVersion>1.8</javaVersion>
    <jhttpcVersion>1.1-SNAPSHOT</jhttpcVersion>
    <rwxVersion>0.2.2-SNAPSHOT</rwxVersion>
    <httpcVersion>4.4</httpcVersion>

    <dbImage>postgres:9.4</dbImage>
    <hubImage>docker.io/buildchimp/koji-dojo-hub</hubImage>

    <dbWaitFor>database system is ready to accept connections</dbWaitFor>
    <hubWaitFor>Starting HTTPd</hubWaitFor>

    <dockerProvider>local</dockerProvider>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.commonjava.boms</groupId>
        <artifactId>web-commons-bom</artifactId>
        <version>17</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.commonjava.rwx</groupId>
        <artifactId>rwx-bindings</artifactId>
        <version>${rwxVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.rwx</groupId>
        <artifactId>rwx-core</artifactId>
        <version>${rwxVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.rwx</groupId>
        <artifactId>rwx-http</artifactId>
        <version>${rwxVersion}</version>
      </dependency>

      <dependency>
        <groupId>org.commonjava.util</groupId>
        <artifactId>jhttpc</artifactId>
        <version>${jhttpcVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpcVersion}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <dependencies>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.rwx</groupId>
      <artifactId>rwx-bindings</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.rwx</groupId>
      <artifactId>rwx-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.rwx</groupId>
      <artifactId>rwx-http</artifactId>
    </dependency>

    <dependency>
      <groupId>org.commonjava.util</groupId>
      <artifactId>jhttpc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- See: https://github.com/wouterd/docker-maven-plugin -->
          <groupId>net.wouterdanes.docker</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>4.1.0</version>
          <executions>
            <execution>
              <id>start-IT-containers</id>
              <goals>
                <goal>start-containers</goal>
              </goals>
              <phase>pre-integration-test</phase>
              <configuration>
                <!-- <forceCleanup>false</forceCleanup> -->
                <providerName>${dockerProvider}</providerName>
                <containers>
                  <container>
                    <id>koji-db</id>
                    <image>${dbImage}</image>
                    <env>
                      <POSTGRES_DB>koji</POSTGRES_DB>
                      <POSTGRES_USER>koji</POSTGRES_USER>
                      <POSTGRES_PASSWORD>mypassword</POSTGRES_PASSWORD>
                    </env>
                    <waitForStartup>${dbWaitFor}</waitForStartup>
                  </container>
                  <container>
                    <id>koji-hub</id>
                    <image>${hubImage}</image>
                    <waitForStartup>${hubWaitFor}</waitForStartup>
                    <links>
                      <link>
                        <containerId>koji-db</containerId>
                        <containerAlias>koji-db</containerAlias>
                      </link>
                    </links>
                  </container>
                </containers>
              </configuration>
            </execution>
            <execution>
              <id>stop-IT-containers</id>
              <goals>
                <goal>stop-containers</goal>
              </goals>
              <phase>post-integration-test</phase>
              <configuration>
                <logs>${project.build.directory}/docker-logs</logs>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
          <executions>
            <execution>
              <id>record-docker-properties</id>
              <goals>
                <goal>run</goal>
              </goals>
              <phase>pre-integration-test</phase>
              <configuration>
                <target>
                  <!--suppress MavenModelInspection -->
                  <echo file="${project.build.directory}/docker.properties">
                    <![CDATA[
docker.containers.koji-hub.ports.80/tcp.host=${docker.containers.koji-hub.ports.80/tcp.host}
docker.containers.koji-hub.ports.443/tcp.host=${docker.containers.koji-hub.ports.443/tcp.host}
docker.containers.koji-hub.ports.80/tcp.port=${docker.containers.koji-hub.ports.80/tcp.port}
docker.containers.koji-hub.ports.443/tcp.port=${docker.containers.koji-hub.ports.443/tcp.port}

javax.net.debug=ssl:handshake:verbose
]]>
                  </echo>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.19</version>
          <executions>
            <execution>
              <id>functional-tests</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <includes>
                  <include>**/*IT.java</include>
                </includes>
                <forkCount>1C</forkCount>
                <redirectTestOutputToFile>true</redirectTestOutputToFile>
                <systemPropertiesFile>${project.build.directory}/docker.properties</systemPropertiesFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>local-its</id>

      <build>
        <plugins>
          <plugin>
            <groupId>net.wouterdanes.docker</groupId>
            <artifactId>docker-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
